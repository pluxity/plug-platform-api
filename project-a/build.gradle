dependencies {
    implementation project(':core:building')
    implementation project(':core:authentication')
}

task generateDocs {
    dependsOn project(':core').subprojects.collect { ":core:${it.name}:asciidoctor" }
    doLast {
        // 문서 복사 및 인덱스 페이지 생성 로직
        project(':core').subprojects.each { subproject ->
            def docsDir = subproject.layout.buildDirectory.file("docs/asciidoc").get().asFile
            if (docsDir.exists() && docsDir.list()?.length > 0) {
                copy {
                    from docsDir
                    into "${layout.buildDirectory.get()}/resources/main/static/docs/${subproject.name}"
                }
            }
        }

        // 인덱스 페이지 생성
        def templateFile = project.file("src/main/resources/docs-template/index-template.html")
        def indexContent = templateFile.text
                .replace("<!-- NAVIGATION_ITEMS -->",
                        project(':core').subprojects
                                .findAll { subproject ->
                                    def docsDir = subproject.layout.buildDirectory.file("docs/asciidoc").get().asFile
                                    docsDir.exists() && docsDir.list()?.length > 0
                                }
                                .collect { subproject ->
                                    """<div class="nav-item">
                            <a href="/docs/${subproject.name}/api-docs.html">${subproject.name.capitalize()} API Documentation</a>
                        </div>"""
                                }
                                .join("\n")
                )

        layout.buildDirectory.file("resources/main/static/docs/index.html").get().asFile.with {
            parentFile.mkdirs()
            text = indexContent
        }
    }
}

classes.finalizedBy generateDocs