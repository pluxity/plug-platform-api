name: Deploy to Production (Self-hosted)

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 실행

jobs:
  deploy:
    # Self-hosted Runner를 지정합니다.
    # Runner 설정 시 특정 레이블을 부여했다면 해당 레이블을 사용할 수 있습니다.
    # 예: runs-on: [self-hosted, linux, x64, plug-platform-deployer]
    # 기본적으로 'self-hosted' 레이블이 부여됩니다.
    runs-on: self-hosted

    steps:
      # 1. 저장소 코드 체크아웃 (선택 사항이지만, 배포 스크립트가 최신 코드를 참조해야 할 경우 필요)
      #    만약 deploy.sh 스크립트가 이미 서버의 특정 위치에 있고, 코드 변경과 무관하게
      #    항상 같은 스크립트를 실행한다면 이 단계는 생략 가능합니다.
      #    하지만, 배포 스크립트 자체가 버전 관리되거나, 특정 버전의 설정을 읽어야 한다면 필요합니다.
      - name: Checkout repository code
        uses: actions/checkout@v4
        # with:
        #   path: 'source_code' # 코드를 특정 디렉토리에 체크아웃 (선택 사항)

      # 2. 배포 스크립트 실행
      #    'working-directory'는 deploy.sh 스크립트가 위치한 디렉토리로 설정합니다.
      #    Self-hosted Runner가 실행되는 사용자의 홈 디렉토리 기준일 수도 있고,
      #    Runner 설정 시 지정한 작업 디렉토리 기준일 수도 있습니다.
      #    정확한 경로를 지정하는 것이 중요합니다.
      - name: Execute deployment script
        # 예시: Runner의 작업 디렉토리 내 'docker/plug-platform-api'에 스크립트가 있다고 가정
        # 또는 Runner가 /home/pluxity/actions-runner 에서 실행되고,
        # 스크립트가 /home/pluxity/docker/plug-platform-api 에 있다면 절대 경로 사용 가능
        working-directory: /home/pluxity/docker/plug-platform-api # deploy.sh가 있는 실제 경로로 변경!
        run: |
          echo "Current directory: $(pwd)"
          echo "Executing deployment script: ./deploy.sh"

          # deploy.sh 스크립트가 sudo 권한을 필요로 하는 경우:
          # Self-hosted Runner를 실행하는 사용자가 비밀번호 없이 sudo 명령을 실행할 수 있도록
          # 서버의 /etc/sudoers 파일에 설정이 필요할 수 있습니다.
          # 예: your_runner_user ALL=(ALL) NOPASSWD: /home/pluxity/docker/plug-platform-api/deploy.sh
          # 또는 your_runner_user ALL=(ALL) NOPASSWD: /bin/bash /home/pluxity/docker/plug-platform-api/deploy.sh
          # (가장 마지막의 deploy.sh 실행 부분)

          if [ -f "./deploy.sh" ]; then
            # 스크립트에 실행 권한이 있고 shebang(#!/bin/bash)이 있다면:
            sudo ./deploy.sh
            # 또는 명시적으로 bash로 실행:
            # sudo bash ./deploy.sh
          else
            echo "Error: deploy.sh not found in $(pwd)"
            exit 1
          fi

          echo "Deployment script execution finished."

      # 3. (선택 사항) 배포 후 정리 작업
      # - name: Clean up old Docker images
      #   if: always() # 이전 단계 실패 여부와 관계없이 항상 실행
      #   working-directory: /home/pluxity/docker/plug-platform-api # deploy.sh가 있는 경로
      #   run: |
      #     echo "Cleaning up unused Docker images..."
      #     sudo docker image prune -af # 매우 주의! 모든 사용하지 않는 이미지 삭제